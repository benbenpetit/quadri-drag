@use './reset';

:root {
  --blue: rgb(81, 156, 213);
  --purple: rgb(140, 0, 255);
  --light-green: rgb(180, 253, 219);
}

@font-face {
  font-family: 'Meadow';
  src: url(./assets/fonts/GlyphWorldMeadow.ttf);
  font-weight: 400;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

body {
  margin: 0;
  font-family: 'Meadow';
  background-color: var(--purple);
}

.wrapper {
  min-height: 100vh;
}

header {
  --w: 8rem;
  --h: 8rem;
  position: fixed;
  z-index: 999;
  top: calc(0.15 * var(--w));
  right: calc(0.15 * var(--h));
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  column-gap: calc(0.075 * var(--w));

  .map-grid {
    position: relative;
    width: var(--w);
    height: var(--h);
    border-radius: 16px;
    overflow: hidden;
    border: 1px solid var(--light-green);

    .map-point {
      position: absolute;
      z-index: 1;
      width: calc(0.085 * var(--w));
      height: calc(0.085 * var(--h));
      border-radius: 50%;
      background-color: var(--blue);
      transform: translate(-50%, -50%);
      pointer-events: none;
      transition: width 0.75s cubic-bezier(0.4, 0, 0, 1),
        height 0.75s cubic-bezier(0.4, 0, 0, 1);

      [zoom-out='true'] & {
        width: calc(0.3 * var(--w));
        height: calc(0.3 * var(--w));

        &::before {
          width: 250%;
          height: 250%;
        }

        &::after {
          width: 150%;
          height: 150%;
        }
      }

      &::before,
      &::after {
        content: '';
        border-radius: 9999px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform-origin: 50% 50% 0px;
        transform: translate(-50%, -50%);
        transition: width 0.75s cubic-bezier(0.4, 0, 0, 1),
          height 0.75s cubic-bezier(0.4, 0, 0, 1);
      }

      &::before {
        width: 160%;
        height: 160%;
        border: 2px solid var(--blue);
      }

      &::after {
        width: 100%;
        height: 100%;
        border: 3px solid var(--blue);
      }
    }

    table {
      width: inherit;
      height: inherit;
      border-collapse: collapse;
      backface-visibility: hidden;
      transform: scale(1);
      transition: transform 1s cubic-bezier(0.4, 0, 0, 1);

      [zoom-out='true'] & {
        transform: scale(2);
      }
    }

    .map-grid-item {
      width: calc(1 / 3 * 100%);
      height: calc(1 / 3 * 100%);
      border: 1px solid var(--light-green);
      background-color: #ffffff;
      cursor: pointer;
      transition: background-color 0.125s cubic-bezier(0.4, 0, 0, 1);

      &.is-inside {
        cursor: default;
      }

      &:not(.is-inside) {
        &:hover {
          background-color: var(--light-green);
        }
      }

      &[data-row='0'] {
        border-top: none;
      }

      &[data-row='2'] {
        border-bottom: none;
      }

      &[data-col='0'] {
        border-left: none;
      }

      &[data-col='2'] {
        border-right: none;
      }
    }
  }

  .unzoom {
    button {
      padding: calc(0.1 * var(--w));
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 12px;
      background-color: #ffffff;
      color: var(--blue);
      transition: color 0.125s cubic-bezier(0.4, 0, 0, 1);

      [zoom-out='true'] & {
        background-color: var(--light-green);

        svg {
          color: #121212;
        }
      }

      &:hover {
        background-color: var(--light-green);
        transition: all 0.125s cubic-bezier(0.4, 0, 0, 1);
      }

      svg {
        width: calc(0.3 * var(--w));
        height: calc(0.3 * var(--w));
        color: inherit;
      }
    }
  }
}

.drag-section {
  overflow: hidden;
  backface-visibility: hidden;
  position: absolute;
  z-index: 0;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  cursor: grab;

  &.is-dragging {
    cursor: grabbing;
  }
}

.drag-grid-wrap {
  position: absolute;
  left: 50%;
  top: 50%;
  width: calc(300 * var(--vw));
  height: calc(300 * var(--vh));
  will-change: transform;
  transform-origin: 50% 50% 0px;
  transform: translate(-50%, -50%);
  transition: transform 0.75s cubic-bezier(0.2, 0, 0, 1);
}

.drag-grid {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  transform-origin: 0 0;
  width: calc(300 * var(--vw));
  height: calc(300 * var(--vh));
  background-color: var(--purple);
  // background: linear-gradient(31deg, var(--purple) 0%, var(--blue) 100%);
}

.drag-grid-item {
  position: absolute;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  display: flex;
  align-items: center;
  justify-content: center;

  @for $i from 0 through 2 {
    &[data-row='#{$i}'] {
      top: calc($i / 3) * 100%;
    }

    &[data-col='#{$i}'] {
      left: calc($i / 3) * 100%;
    }
  }
}

h1 {
  font-size: calc(8.5 * var(--vw));
  color: #ffffff;
}

a {
  font-family: 'Arial';
  font-size: calc(1.5 * var(--vw));
  color: #ffffff;
  text-align: center;
}

.item-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  row-gap: 32px;

  img {
    width: auto;
    height: auto;
    max-width: calc(80 * var(--vw));
    max-height: calc(80 * var(--vh));
    border-radius: 16px;
  }
}
